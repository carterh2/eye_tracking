random = a + b ~ 1 | ID,
start = c(a_intercept = -1.642777,            # Initial value for a's intercept
b_intercept = -0.04070717,
a_18_26 = 0,
b_18_26 = 0,
a_27_35 = 0,
b_27_35 = 0,
a_36_45 = 0,
b_36_45 = 0,
a_46_59 = 0,
b_46_59 = 0,
a_female = 0,
b_female = 0,
a_airship = 0,
b_airship = 0,a_coastal_town = 0,
b_coastal_town = 0,a_diver = 0,
b_diver = 0,a_elef = 0,
b_elef = 0,a_f_diver = 0,
b_f_diver = 0,a_isl = 0,
b_isl = 0,a_boat = 0,
b_boat = 0,a_wake = 0,
b_wake = 0,a_mermaid = 0,
b_mermaid = 0,a_oct = 0,
b_oct = 0,a_jump = 0,
b_jump = 0,a_seal = 0,
b_seal = 0,a_son = 0,
b_son = 0,a_space = 0,
b_space = 0,a_sunset = 0,
b_sunset = 0,a_surf = 0,
b_surf = 0,a_turtle = 0,
b_turtle = 0,a_woman_surf = 0,
b_woman_surf = 0,a_sat = 0,
b_sat = 0,a_bright = 0,
b_bright = 0),
control = nlmeControl(maxIter = 100),
data = df
)
summary(model_sat_bright)
r2(model_sat_bright)
r2(model_sat_bnr)
install.packages("lme4")
library(lme4)
r2(model_sat_bright)
library(lme4)
r2(model_sat_bright)
install.packages("lme4")
install.packages("lme4")
library(lme4)
install.packages
install.packages('lme4')
library(lme4)
r2()
# attach relevant libraries
library(nlme)
library(dplyr)
library(sandwich)
# read in csv of data
# set working directory
setwd('C:/Users/chica/OneDrive/Documents/Case Studies/eye_tracking/results')
# read in the data
df <- read.csv('post_processed_data.csv')
# create a log variable for Order
df$Order_log <- log(df$Order + 1)
df$ROI_area <- ifelse(is.na(df$ROI_area), 0, df$ROI_area)
df$ROI_area <- scale(ifelse(is.na(df$ROI_area), 0, df$ROI_area))
df$ROI <- factor(df$ROI)
df$ROI <- factor(df$ROI, levels =c("None","airship",
"coastal_town","diver_with_abs",
"elefant_under_water","female_diver",
"island_with_lighttower",
"little_boat_in_the_distance",
"man_wakeboarding","mermaid", "octupus",
"people_jumping_from_boat","seal",
"son_and_father_fishing","space",
"sunset","surfboard","turtle",
"woman_on_surboard"))
df$Age_Group_Cluster <- factor(df$Age_Group_Cluster, levels =c("5-17","18-26",                                                            "27-35","36-45","46-59"))
model_simple <- nlme(
log_duration ~ a - b * Order_log,
fixed = a + b ~1,            # Intercept-only fixed effects
random = a + b ~ 1 | ID,
start = c(a_intercept = 100,            # Initial value for a's intercept
b_intercept = 10),
data = df
)
summary(model_simple)
model_sat_bright <- nlme(
log_duration ~ a - b * Order_log,
fixed = a + b ~ Age_Group_Cluster +female + ROI + Saturation_normed + Brightness_normed,            # Intercept-only fixed effects
random = a + b ~ 1 | ID,
start = c(a_intercept = -1.642777,            # Initial value for a's intercept
b_intercept = -0.04070717,
a_18_26 = 0,
b_18_26 = 0,
a_27_35 = 0,
b_27_35 = 0,
a_36_45 = 0,
b_36_45 = 0,
a_46_59 = 0,
b_46_59 = 0,
a_female = 0,
b_female = 0,
a_airship = 0,
b_airship = 0,a_coastal_town = 0,
b_coastal_town = 0,a_diver = 0,
b_diver = 0,a_elef = 0,
b_elef = 0,a_f_diver = 0,
b_f_diver = 0,a_isl = 0,
b_isl = 0,a_boat = 0,
b_boat = 0,a_wake = 0,
b_wake = 0,a_mermaid = 0,
b_mermaid = 0,a_oct = 0,
b_oct = 0,a_jump = 0,
b_jump = 0,a_seal = 0,
b_seal = 0,a_son = 0,
b_son = 0,a_space = 0,
b_space = 0,a_sunset = 0,
b_sunset = 0,a_surf = 0,
b_surf = 0,a_turtle = 0,
b_turtle = 0,a_woman_surf = 0,
b_woman_surf = 0,a_sat = 0,
b_sat = 0,a_bright = 0,
b_bright = 0),
control = nlmeControl(maxIter = 100),
data = df
)
summary(model_sat_bright)
fixed_effects_predictions <- predict(model_sat_bright, level = 0)
var_fixed <- var(fixed_effects_predictions)
r2_marginal <- var_fixed / (var_fixed + var_random + var_residual)
fixed_effects_predictions <- predict(model_sat_bright, level = 0)
var_fixed <- var(fixed_effects_predictions)
var_random <- as.numeric(VarCorr(model)[1, "Variance"])  # Random effects variance
fixed_effects_predictions <- predict(model_sat_bright, level = 0)
var_fixed <- var(fixed_effects_predictions)
var_random <- as.numeric(VarCorr(model_sat_bright)[1, "Variance"])  # Random effects variance
var_residual <- model_sat_bright$sigma^2                             # Residual variance
r2_marginal <- var_fixed / (var_fixed + var_random + var_residual)
r2_conditional <- (var_fixed + var_random) / (var_fixed + var_random + var_residual)
fixed_effects_predictions <- predict(model_sat_bright, level = 0)
var_fixed <- var(fixed_effects_predictions)
var_random <- as.numeric(VarCorr(model_sat_bright)[1, "Variance"])  # Random effects variance
var_residual <- model_sat_bright$sigma^2                             # Residual variance
r2_marginal <- var_fixed / (var_fixed + var_random + var_residual)
r2_conditional <- (var_fixed + var_random) / (var_fixed + var_random + var_residual)
model_age_gender <- nlme(
duration ~ a - b * Order_log,
fixed = a + b ~ Age_Group_Cluster +female,            # Intercept-only fixed effects
random = a + b ~ 1 | ID,
start = c(a_intercept = -1.642777,            # Initial value for a's intercept
b_intercept = -0.04070717,
a_18_26 = 0,
b_18_26 = 0,
a_27_35 = 0,
b_27_35 = 0,
a_36_45 = 0,
b_36_45 = 0,
a_46_59 = 0,
b_46_59 = 0,
a_female = 0,
b_female = 0
),
control = nlmeControl(msMaxIter = 200),
data = df
)
summary(model_age_gender)
AIC(model_age, model_age_gender)
model_roi_cat <- nlme(
log_duration ~ a - b * Order_log,
fixed = a + b ~ Age_Group_Cluster +female + ROI,            # Intercept-only fixed effects
random = a + b ~ 1 | ID,
start = c(a_intercept = -1.642777,            # Initial value for a's intercept
b_intercept = -0.04070717,
a_18_26 = 0,
b_18_26 = 0,
a_27_35 = 0,
b_27_35 = 0,
a_36_45 = 0,
b_36_45 = 0,
a_46_59 = 0,
b_46_59 = 0,
a_female = 0,
b_female = 0,
a_airship = 0,
b_airship = 0,a_coastal_town = 0,
b_coastal_town = 0,a_diver = 0,
b_diver = 0,a_elef = 0,
b_elef = 0,a_f_diver = 0,
b_f_diver = 0,a_isl = 0,
b_isl = 0,a_boat = 0,
b_boat = 0,a_wake = 0,
b_wake = 0,a_mermaid = 0,
b_mermaid = 0,a_oct = 0,
b_oct = 0,a_jump = 0,
b_jump = 0,a_seal = 0,
b_seal = 0,a_son = 0,
b_son = 0,a_space = 0,
b_space = 0,a_sunset = 0,
b_sunset = 0,a_surf = 0,
b_surf = 0,a_turtle = 0,
b_turtle = 0,a_woman_surf = 0,
b_woman_surf = 0),
control = nlmeControl(maxIter = 100),
data = df
)
summary(model_roi_cat)
AIC(model_age_gender, model_roi_cat)
r2_nlme <- function(model) {
fixed_effects_predictions <- predict(model, level = 0)
var_fixed <- var(fixed_effects_predictions)
var_random <- as.numeric(VarCorr(model)[1, "Variance"])  # Random effects variance
var_residual <- model$sigma^2                             # Residual variance
r2_marginal <- var_fixed / (var_fixed + var_random + var_residual)
r2_conditional <- (var_fixed + var_random) / (var_fixed + var_random + var_residual)
# Return results
return(list(
Marginal_R2 = r2_marginal,
Conditional_R2 = R2_conditional,
Residual_Variance = var_residual,
Random_Effects_Variance = var_random,
Fixed_Effects_Variance = var_fixed
))
}
#simple
m1<-r2_nlme(model_simple)
r2_nlme <- function(model) {
fixed_effects_predictions <- predict(model, level = 0)
var_fixed <- var(fixed_effects_predictions)
var_random <- as.numeric(VarCorr(model)[1, "Variance"])  # Random effects variance
var_residual <- model$sigma^2                             # Residual variance
r2_marginal <- var_fixed / (var_fixed + var_random + var_residual)
r2_conditional <- (var_fixed + var_random) / (var_fixed + var_random + var_residual)
# Return results
return(list(
Marginal_R2 = r2_marginal,
Conditional_R2 = r2_conditional,
Residual_Variance = var_residual,
Random_Effects_Variance = var_random,
Fixed_Effects_Variance = var_fixed
))
}
#simple
m1<-r2_nlme(model_simple)
#age
m2<-r2_nlme(model_age)
# age + gender
m3<-r2_nlme(model_age_gender)
# age + gender + roi_cat
m4<-r2_nlme(model_roi_cat)
## age + gender + roi_cat + bright + sat
m5<-r2_nlme(model_sat_bright)
model_summary <- data.frame(
Model = c("Simple", "Age", "Age + Gender", "Age + Gender + ROI_Cat", "Age + Gender + ROI_Cat + Bright + Sat"),
Marginal_R2 = c(m1$Marginal_R2, m2$Marginal_R2, m3$Marginal_R2,
m4$Marginal_R2, m5$Marginal_R2),
Conditional_R2 = c(m1$Conditional_R2, m2$Conditional_R2,
m3$Conditional_R2, m4$Conditional_R2, m5$Conditional_R2),
Residual_Variance = c(m1$Residual_Variance, m2$Residual_Variance,
m3$Residual_Variance, m4$Residual_Variance,
m5$Residual_Variance),
Random_Effects_Variance = c(m1$Random_Effects_Variance,
m2$Random_Effects_Variance,
m3$Random_Effects_Variance,
m4$Random_Effects_Variance,
m5$Random_Effects_Variance),
Fixed_Effects_Variance = c(m1$Fixed_Effects_Variance, m2$Fixed_Effects_Variance, m3$Fixed_Effects_Variance, m4$Fixed_Effects_Variance, m5$Fixed_Effects_Variance)
)
View(model_summary)
# attach relevant libraries
library(nlme)
library(dplyr)
library(sandwich)
# read in csv of data
# set working directory
setwd('C:/Users/chica/OneDrive/Documents/Case Studies/eye_tracking/results')
# read in the data
df <- read.csv('post_processed_data.csv')
# create a log variable for Order
df$Order_log <- log(df$Order + 1)
df$ROI_area <- ifelse(is.na(df$ROI_area), 0, df$ROI_area)
df$ROI_area <- scale(ifelse(is.na(df$ROI_area), 0, df$ROI_area))
df$ROI <- ifelse(is.na(df$ROI), "No_ROI", df$ROI)
df$ROI <- factor(df$ROI)
df$ROI <- factor(df$ROI, levels =c("No_ROI","airship",
"coastal_town","diver_with_abs",
"elefant_under_water","female_diver",
"island_with_lighttower",
"little_boat_in_the_distance",
"man_wakeboarding","mermaid", "octupus",
"people_jumping_from_boat","seal",
"son_and_father_fishing","space",
"sunset","surfboard","turtle",
"woman_on_surboard"))
#Add stars based on p-value significance
summary_table$Significance <- ifelse(summary_table$P_value < 0.001, "***",
ifelse(summary_table$P_value < 0.01, "**",
ifelse(summary_table$P_value < 0.05, "*", "")))
# Extract fixed effects (coefficients)
coefficients <- fixef(model_sat_bright)
# Calculate the robust variance-covariance matrix using the sandwich estimator
vcov_robust <- vcov(model_sat_bright, type = "HC3")  # Robust standard errors using HC3
# Extract robust standard errors (diagonal elements of the covariance matrix)
robust_se <- sqrt(diag(vcov_robust))
# Calculate z-values (coefficient / robust SE)
z_values <- coefficients / robust_se
# Calculate robust p-values (2-tailed)
p_values_robust <- 2 * pnorm(-abs(z_values))  # Two-tailed test
# Create a summary table with coefficient names, robust standard errors, and p-values
summary_table <- data.frame(
Coefficient = names(coefficients),
Estimate = coefficients,
Robust_SE = robust_se,
Z_value = z_values,
P_value = p_values_robust
)
# Filter for significant coefficients (p-value < 0.05)
significant_summary_table <- summary_table[summary_table$P_value < 0.05, ]
# Print the summary table
print(significant_summary_table)
#Add stars based on p-value significance
summary_table$Significance <- ifelse(summary_table$P_value < 0.001, "***",
ifelse(summary_table$P_value < 0.01, "**",
ifelse(summary_table$P_value < 0.05, "*", "")))
# Create LaTeX table with Coefficients, Estimates, P-values, and Significance stars
latex_table <- paste0(
"\\begin{table}[ht]\n",
"\\centering\n",
"\\begin{tabular}{|l|c|c|c|}\n",
"\\hline\n",
"Coefficient & Estimate & P-value & Significance \\\\ \n",
"\\hline\n"
)
# Add the significant rows to the LaTeX table
for (i in 1:nrow(significant_summary_table)) {
latex_table <- paste0(
latex_table,
summary_table$Coefficient[i], " & ",
round(summary_table$Estimate[i], 4), " & ",
round(summary_table$P_value[i], 4), " & ",
summary_table$Significance[i], " \\\\ \n"
)
}
# Close the LaTeX table
latex_table <- paste0(latex_table, "\\hline\n", "\\end{tabular}\n", "\\end{table}")
# Print the LaTeX table
cat(latex_table)
# Get the summary of the model
model_summary <- summary(model_sat_bright)
# Extract coefficients and p-values
coefficients <- as.data.frame(model_summary$tTable)
# Add row names as a column for better clarity
coefficients$Parameter <- rownames(coefficients)
# Rearrange columns to show parameter, estimate, and p-value
coefficients <- coefficients[, c("Parameter", "Value", "p-value")]
# Convert to a LaTeX table using xtable
latex_table <- xtable(coefficients, caption = "Nonlinear Mixed-Effects Model Coefficients")
library(xtable)
# Get the summary of the model
model_summary <- summary(model_sat_bright)
# Extract coefficients and p-values
coefficients <- as.data.frame(model_summary$tTable)
# Add row names as a column for better clarity
coefficients$Parameter <- rownames(coefficients)
# Rearrange columns to show parameter, estimate, and p-value
coefficients <- coefficients[, c("Parameter", "Value", "p-value")]
# Convert to a LaTeX table using xtable
latex_table <- xtable(coefficients, caption = "Nonlinear Mixed-Effects Model Coefficients")
# Print the LaTeX table
print(latex_table, include.rownames = FALSE)
library(xtable)
# Get the summary of the model
model_summary <- summary(model_sat_bright)
# Extract coefficients and p-values
coefficients <- as.data.frame(model_summary$tTable)
# Add row names as a column for better clarity
coefficients$Parameter <- rownames(coefficients)
# Rearrange columns to show parameter, estimate, and p-value
coefficients <- coefficients[, c("Parameter", "Value", "p-value")]
# Convert to a LaTeX table using xtable
latex_table <- xtable(coefficients, caption = "Nonlinear Mixed-Effects Model Coefficients")
# Print the LaTeX table in the sidewaystable environment
print(
latex_table,
include.rownames = FALSE,
floating.environment = "sidewaystable", # Use sidewaystable
table.placement = "ht" # Optional placement
)
# attach relevant libraries
library(nlme)
library(dplyr)
library(sandwich)
# read in csv of data
# set working directory
setwd('C:/Users/chica/OneDrive/Documents/Case Studies/eye_tracking/results')
# read in the data
df <- read.csv('post_processed_data.csv')
# create a log variable for Order
df$Order_log <- log(df$Order + 1)
df$ROI_area <- ifelse(is.na(df$ROI_area), 0, df$ROI_area)
df$ROI_area <- scale(ifelse(is.na(df$ROI_area), 0, df$ROI_area))
df$ROI <- ifelse(is.na(df$ROI), "No_ROI", df$ROI)
df$ROI <- factor(df$ROI)
df$ROI <- factor(df$ROI, levels =c("No_ROI","airship",
"coastal_town","diver_with_abs",
"elefant_under_water","female_diver",
"island_with_lighttower",
"little_boat_in_the_distance",
"man_wakeboarding","mermaid", "octupus",
"people_jumping_from_boat","seal",
"son_and_father_fishing","space",
"sunset","surfboard","turtle",
"woman_on_surboard"))
model_sat_bright <-  nlme(
log_duration ~ a - b * Order_log,
fixed = a + b ~ bright + sat + Age_19 + Age_27 + Age_36 + Age_46 + female + ROI,
random = a + b ~ 1 | ID,
start = c(a_intercept = -1.642777,            # Initial value for a's intercept
b_intercept = -0.04070717, a_bright = 0, b_bright= 0, a_sat = 0, b_sat = 0,
a_19_26 = 0,
b_19_26 = 0,
a_27_35 = 0,
b_27_35 = 0,
a_36_45 = 0,
b_36_45 = 0,
a_46_59 = 0,
b_46_59 = 0,
a_female = 0,
b_female = 0,
a_airship = 0,
b_airship = 0,a_coastal_town = 0,
b_coastal_town = 0,a_diver = 0,
b_diver = 0,a_elef = 0,
b_elef = 0,a_f_diver = 0,
b_f_diver = 0,a_isl = 0,
b_isl = 0,a_boat = 0,
b_boat = 0,a_wake = 0,
b_wake = 0,a_mermaid = 0,
b_mermaid = 0,a_oct = 0,
b_oct = 0,a_jump = 0,
b_jump = 0,a_seal = 0,
b_seal = 0,a_son = 0,
b_son = 0,a_space = 0,
b_space = 0,a_sunset = 0,
b_sunset = 0,a_surf = 0,
b_surf = 0,a_turtle = 0,
b_turtle = 0,a_woman_surf = 0,
b_woman_surf = 0),
control = nlmeControl(maxIter = 200 ),
data = df
)
df$Age_19 <- df$Age_19.26
df$Age_27 <- df$Age_27.35
df$Age_36 <- df$Age_36.45
df$Age_46 <- df$Age_46.59
df$bright <- df$Brightness_normed
df$sat <- df$Saturation_normed
model_sat_bright <-  nlme(
log_duration ~ a - b * Order_log,
fixed = a + b ~ bright + sat + Age_19 + Age_27 + Age_36 + Age_46 + female + ROI,
random = a + b ~ 1 | ID,
start = c(a_intercept = -1.642777,            # Initial value for a's intercept
b_intercept = -0.04070717, a_bright = 0, b_bright= 0, a_sat = 0, b_sat = 0,
a_19_26 = 0,
b_19_26 = 0,
a_27_35 = 0,
b_27_35 = 0,
a_36_45 = 0,
b_36_45 = 0,
a_46_59 = 0,
b_46_59 = 0,
a_female = 0,
b_female = 0,
a_airship = 0,
b_airship = 0,a_coastal_town = 0,
b_coastal_town = 0,a_diver = 0,
b_diver = 0,a_elef = 0,
b_elef = 0,a_f_diver = 0,
b_f_diver = 0,a_isl = 0,
b_isl = 0,a_boat = 0,
b_boat = 0,a_wake = 0,
b_wake = 0,a_mermaid = 0,
b_mermaid = 0,a_oct = 0,
b_oct = 0,a_jump = 0,
b_jump = 0,a_seal = 0,
b_seal = 0,a_son = 0,
b_son = 0,a_space = 0,
b_space = 0,a_sunset = 0,
b_sunset = 0,a_surf = 0,
b_surf = 0,a_turtle = 0,
b_turtle = 0,a_woman_surf = 0,
b_woman_surf = 0),
control = nlmeControl(maxIter = 200 ),
data = df
)
library(xtable)
# Get the summary of the model
model_summary <- summary(model_sat_bright)
# Extract coefficients and p-values
coefficients <- as.data.frame(model_summary$tTable)
# Add row names as a column for better clarity
coefficients$Parameter <- rownames(coefficients)
# Rearrange columns to show parameter, estimate, and p-value
coefficients <- coefficients[, c("Parameter", "Value", "p-value")]
# Convert to a LaTeX table using xtable
latex_table <- xtable(coefficients, caption = "Nonlinear Mixed-Effects Model Coefficients")
# Print the LaTeX table in the sidewaystable environment
print(
latex_table,
include.rownames = FALSE,
floating.environment = "sidewaystable", # Use sidewaystable
table.placement = "ht" # Optional placement
)
